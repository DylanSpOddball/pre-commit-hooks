#!/usr/bin/env bash

set -euo pipefail

HADOLINT_PREFIX_URL="https://github.com/hadolint/hadolint/releases/download"
HADOLINT_VERSION="v2.1.0"
OS=$(uname -s)
ARCH=$(uname -m)
HADOLINT_BINARY="hadolint-${OS}-${ARCH}"
HADOLINT_URL="${HADOLINT_PREFIX_URL}/${HADOLINT_VERSION}/${HADOLINT_BINARY}"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
LOCAL_BINARY="${DIR}/${HADOLINT_BINARY}-${HADOLINT_VERSION}"

# Download the binary if it doesn't already exist
if [[ ! -x ${LOCAL_BINARY} ]]; then
    # use mkdir as a lock so only single download happens
    # can't use flock as that doesn't exist on macOS
    if mkdir "${LOCAL_BINARY}.lock" 2>/dev/null; then
        curl -o "${LOCAL_BINARY}" -L -sSf "${HADOLINT_URL}"
        chmod 755 "${LOCAL_BINARY}"
    else
        # another process is downloading, give it time to complete
        sleep 5
    fi
fi

files=()

# only run hadolint if it looks like a Dockerfile
for f in "$@"; do
    case $f in
        (Dockerfile*|*/Dockerfile*)
            files+=( "${f}" )
            ;;
    esac
done

if [[ "${#files[@]}" -gt 0 ]]; then
    exec "${LOCAL_BINARY}" "${files[@]}"
fi

# if no files, exit successfully
exit 0
